name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Python ${{ matrix.python }} - ${{ matrix.collection.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python: [ "3.7", "3.8", "3.9", "3.10" ]
        collection:
          - { name: "Amadeus", id: "amadeus" }
          - { name: "Autosar", id: "autosar" }
          - { name: "BPMN", id: "bpmn" }
          - { name: "Common Types", id: "common_types" }
          - { name: "Crossref Metadata", id: "crossref" }
          - { name: "DateX II", id: "datexii" }
          - { name: "DefXML", id: "defxml" }
          - { name: "EWP", id: "ewp" }
          - { name: "Generali", id: "generali" }
          - { name: "NeTEx", id: "netex" }
          - { name: "NPO API", id: "npo" }
          - { name: "ReqIF", id: "reqif" }
          - { name: "Sabre", id: "sabre" }
          - { name: "SpaceX", id: "spacex" }
          - { name: "Travelport", id: "travelport" }
          - { name: "UBL", id: "ubl" }
          - { name: "XCBL", id: "xcbl" }
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install libxml2
        if: startsWith(matrix.python, 'pypy')
        run: |
          sudo apt-get install libxml2-dev libxslt-dev
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      - name: Generate Code
        if: matrix.collection.id != 'defxml'
        run: make build-${{ matrix.collection.id }}
      - name: Run Tests
        if: matrix.collection.id != 'common_types'
        run: make test-${{ matrix.collection.id }}
      - name: Run mypy
        run: make mypy-${{ matrix.collection.id }}
