from dataclasses import dataclass, field
from typing import Optional

__NAMESPACE__ = "http://wsdl.amadeus.com/2010/06/ws/Link_v1"


@dataclass
class ConsumerType:
    """Description of an end-user.

    :ivar unique_id: A unique id generated by the consumer to uniquely identify a client
    """
    unique_id: Optional[str] = field(
        default=None,
        metadata=dict(
            name="UniqueID",
            type="Element",
            namespace="http://wsdl.amadeus.com/2010/06/ws/Link_v1",
            required=True,
            max_length=64.0
        )
    )


@dataclass
class ReceiverType:
    """Description of the server.

    :ivar server_id: A unique id generated by the server to uniquely identify a link
    """
    server_id: Optional[str] = field(
        default=None,
        metadata=dict(
            name="ServerID",
            type="Element",
            namespace="http://wsdl.amadeus.com/2010/06/ws/Link_v1",
            required=True,
            max_length=64.0
        )
    )


@dataclass
class TransactionFlowLinkType:
    """A link to uniquely identify an end-user flow.

    :ivar consumer: Description of the client
    :ivar receiver: Description of the server
    """
    consumer: Optional[ConsumerType] = field(
        default=None,
        metadata=dict(
            name="Consumer",
            type="Element",
            namespace="http://wsdl.amadeus.com/2010/06/ws/Link_v1"
        )
    )
    receiver: Optional[ReceiverType] = field(
        default=None,
        metadata=dict(
            name="Receiver",
            type="Element",
            namespace="http://wsdl.amadeus.com/2010/06/ws/Link_v1"
        )
    )


@dataclass
class TransactionFlowLink(TransactionFlowLinkType):
    """A set of indicators to link a flow."""
    class Meta:
        namespace = "http://wsdl.amadeus.com/2010/06/ws/Link_v1"
