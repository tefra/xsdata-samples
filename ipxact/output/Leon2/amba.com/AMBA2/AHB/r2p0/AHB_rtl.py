from ipxact.models.abstraction_definition import AbstractionDefinition
from ipxact.models.direction import Direction
from ipxact.models.library_ref_type import LibraryRefType
from ipxact.models.presence import Presence
from ipxact.models.presence_type import PresenceType
from ipxact.models.qualifier_type import QualifierType
from ipxact.models.requires_driver import RequiresDriver
from ipxact.models.requires_driver_driver_type import RequiresDriverDriverType
from ipxact.models.unsigned_bit_vector_expression import UnsignedBitVectorExpression
from ipxact.models.wire import Wire


obj = AbstractionDefinition(
    vendor='amba.com',
    library='AMBA2',
    name='AHB_rtl',
    version='r2p0_6',
    bus_type=LibraryRefType(
        vendor='amba.com',
        library='AMBA2',
        name='AHB',
        version='r2p0_6'
    ),
    extends=LibraryRefType(
        vendor='amba.com',
        library='AMBA3',
        name='AHBLite_rtl',
        version='r1p0_6'
    ),
    ports=AbstractionDefinition.Ports(
        port=[
            AbstractionDefinition.Ports.Port(
                logical_name='HCLK',
                wire=Wire(
                    qualifier=QualifierType(
                        is_clock=True
                    ),
                    on_system=[
                        Wire.OnSystem(
                            group='ahb_clk',
                            width=Wire.OnSystem.Width(
                                value='1'
                            ),
                            direction=Direction.OUT
                        ),
                    ],
                    on_initiator=Wire.OnInitiator(
                        width=Wire.OnInitiator.Width(
                            value='1'
                        ),
                        direction=Direction.IN
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='1'
                        ),
                        direction=Direction.IN
                    ),
                    requires_driver=RequiresDriver(
                        value=True,
                        driver_type=RequiresDriverDriverType.CLOCK
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HRESETn',
                wire=Wire(
                    qualifier=QualifierType(
                        is_reset=QualifierType.IsReset(
                            value=True
                        )
                    ),
                    on_system=[
                        Wire.OnSystem(
                            group='ahb_reset',
                            width=Wire.OnSystem.Width(
                                value='1'
                            ),
                            direction=Direction.OUT
                        ),
                    ],
                    on_initiator=Wire.OnInitiator(
                        width=Wire.OnInitiator.Width(
                            value='1'
                        ),
                        direction=Direction.IN
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='1'
                        ),
                        direction=Direction.IN
                    ),
                    requires_driver=RequiresDriver(
                        value=True,
                        driver_type=RequiresDriverDriverType.SINGLE_SHOT
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HCLKEN',
                wire=Wire(
                    on_system=[
                        Wire.OnSystem(
                            group='ahb_clk',
                            width=Wire.OnSystem.Width(
                                value='1'
                            ),
                            direction=Direction.OUT
                        ),
                    ],
                    on_initiator=Wire.OnInitiator(
                        width=Wire.OnInitiator.Width(
                            value='1'
                        ),
                        direction=Direction.IN
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='1'
                        ),
                        direction=Direction.IN
                    ),
                    default_value=UnsignedBitVectorExpression(
                        value='1'
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HADDR',
                wire=Wire(
                    qualifier=QualifierType(
                        is_address=True
                    ),
                    on_initiator=Wire.OnInitiator(
                        width=Wire.OnInitiator.Width(
                            value='32'
                        ),
                        direction=Direction.OUT
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='32'
                        ),
                        direction=Direction.IN
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HTRANS',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        width=Wire.OnInitiator.Width(
                            value='2'
                        ),
                        direction=Direction.OUT
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='2'
                        ),
                        direction=Direction.IN
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HWRITE',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        width=Wire.OnInitiator.Width(
                            value='1'
                        ),
                        direction=Direction.OUT
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='1'
                        ),
                        direction=Direction.IN
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HSIZE',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        width=Wire.OnInitiator.Width(
                            value='3'
                        ),
                        direction=Direction.OUT
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='3'
                        ),
                        direction=Direction.IN
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HBURST',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        width=Wire.OnInitiator.Width(
                            value='3'
                        ),
                        direction=Direction.OUT
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='3'
                        ),
                        direction=Direction.IN
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HPROT',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        direction=Direction.OUT
                    ),
                    on_target=Wire.OnTarget(
                        direction=Direction.IN
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HWDATA',
                wire=Wire(
                    qualifier=QualifierType(
                        is_data=True
                    ),
                    on_initiator=Wire.OnInitiator(
                        direction=Direction.OUT
                    ),
                    on_target=Wire.OnTarget(
                        direction=Direction.IN
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HSELx',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        presence=Presence(
                            value=PresenceType.ILLEGAL
                        )
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='1'
                        ),
                        direction=Direction.IN
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HRDATA',
                wire=Wire(
                    qualifier=QualifierType(
                        is_data=True
                    ),
                    on_initiator=Wire.OnInitiator(
                        direction=Direction.IN
                    ),
                    on_target=Wire.OnTarget(
                        direction=Direction.OUT
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HREADY',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        width=Wire.OnInitiator.Width(
                            value='1'
                        ),
                        direction=Direction.IN
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='1'
                        ),
                        direction=Direction.IN
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HREADYOUT',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        presence=Presence(
                            value=PresenceType.ILLEGAL
                        )
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='1'
                        ),
                        direction=Direction.OUT
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HRESP',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        direction=Direction.IN
                    ),
                    on_target=Wire.OnTarget(
                        direction=Direction.OUT
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HBUSREQx',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        width=Wire.OnInitiator.Width(
                            value='1'
                        ),
                        direction=Direction.OUT
                    ),
                    on_target=Wire.OnTarget(
                        presence=Presence(
                            value=PresenceType.ILLEGAL
                        )
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HLOCKx',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        width=Wire.OnInitiator.Width(
                            value='1'
                        ),
                        direction=Direction.OUT
                    ),
                    on_target=Wire.OnTarget(
                        presence=Presence(
                            value=PresenceType.ILLEGAL
                        )
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HGRANTx',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        width=Wire.OnInitiator.Width(
                            value='1'
                        ),
                        direction=Direction.IN
                    ),
                    on_target=Wire.OnTarget(
                        presence=Presence(
                            value=PresenceType.ILLEGAL
                        )
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HMASTER',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        presence=Presence(
                            value=PresenceType.ILLEGAL
                        )
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='4'
                        ),
                        direction=Direction.IN
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HMASTLOCK',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        presence=Presence(
                            value=PresenceType.ILLEGAL
                        )
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='1'
                        ),
                        direction=Direction.IN
                    )
                )
            ),
            AbstractionDefinition.Ports.Port(
                logical_name='HSPLITx',
                wire=Wire(
                    on_initiator=Wire.OnInitiator(
                        presence=Presence(
                            value=PresenceType.ILLEGAL
                        )
                    ),
                    on_target=Wire.OnTarget(
                        width=Wire.OnTarget.Width(
                            value='16'
                        ),
                        direction=Direction.OUT
                    )
                )
            ),
        ]
    )
)
