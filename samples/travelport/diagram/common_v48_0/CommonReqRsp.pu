@startuml

class BaseCoreReq {
    +BillingPointOfSaleInfo : BillingPointOfSaleInfo
    +AgentIDOverride : AgentIDOverride[]
    +TerminalSessionInfo : TerminalSessionInfo
    +TraceId : string
    +TokenId : string
    +AuthorizedBy : string
    +TargetBranch : string
    +OverrideLogging : typeLoggingLevel
    +LanguageCode : language
}
class BaseCoreSearchReq {
    +NextResultReference : NextResultReference[]
}
BaseCoreSearchReq *- BaseCoreReq
class BaseCreateReservationReq {
    +LinkedUniversalRecord : LinkedUniversalRecord[]
    +BookingTraveler : BookingTraveler[]
    +OSI : OSI[]
    +AccountingRemark : AccountingRemark[]
    +GeneralRemark : GeneralRemark[]
    +XMLRemark : XMLRemark[]
    +UnassociatedRemark : UnassociatedRemark[]
    +Postscript : Postscript
    +PassiveInfo : PassiveInfo
    +ContinuityCheckOverride : ContinuityCheckOverride
    +AgencyContactInfo : AgencyContactInfo
    +CustomerID : CustomerID
    +FileFinishingInfo : FileFinishingInfo
    +CommissionRemark : CommissionRemark
    +ConsolidatorRemark : ConsolidatorRemark
    +InvoiceRemark : InvoiceRemark[]
    +SSR : SSR[]
    +EmailNotification : EmailNotification
    +QueuePlace : QueuePlace
    +RuleName : string
    +UniversalRecordLocatorCode : string
    +ProviderLocatorCode : string
    +ProviderCode : string
    +CustomerNumber : string
    +Version : integer
}
BaseCreateReservationReq *- BaseReq
class BaseCreateWithFormOfPaymentReq {
    +FormOfPayment : FormOfPayment[]
}
BaseCreateWithFormOfPaymentReq *- BaseCreateReservationReq
class BaseReq {
    +OverridePCC : OverridePCC
    +RetrieveProviderReservationDetails : boolean
}
BaseReq *- BaseCoreReq
class BaseRsp {
    +ResponseMessage : ResponseMessage[]
    +TraceId : string
    +TransactionId : string
    +ResponseTime : integer
    +CommandHistory : string
}
class BaseSearchReq {
    +NextResultReference : NextResultReference[]
}
BaseSearchReq *- BaseReq
class BaseSearchRsp {
    +NextResultReference : NextResultReference[]
}
BaseSearchRsp *- BaseRsp
class ErrorInfo {
}
ErrorInfo *- typeErrorInfo
enum typeLoggingLevel {
    TRACE = TRACE
    DEBUG = DEBUG
    INFO = INFO
    WARN = WARN
    ERROR = ERROR
    FATAL = FATAL
}

@enduml